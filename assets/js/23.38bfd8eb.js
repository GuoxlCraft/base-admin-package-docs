(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{384:function(e,a,n){"use strict";n.r(a);var t=n(45),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"加载依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载依赖"}},[e._v("#")]),e._v(" 加载依赖")]),e._v(" "),n("p",[e._v("在安装公共依赖包到业务项目之后就能够在业务项目中加载需要的组件、业务钩子和工具类来使用了。")]),e._v(" "),n("h2",{attrs:{id:"组件-components"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件-components"}},[e._v("#")]),e._v(" 组件（components）")]),e._v(" "),n("p",[e._v("公共依赖提供了丰富的组件，用于业务项目的日常开发。")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),n("p",[e._v("本依赖库暂不提供完整引入的功能，请期待后续的功能支持。")])]),e._v(" "),n("p",[e._v("目前依赖库提供，更多的组件期待后续丰富。")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("  ComTable, // 表格\n  SvgIcon,  // SVG\n  ComSearch, // 搜索栏\n  ComDialog, // 弹窗\n  ComDetail, // 详情\n  ComForm,   // 表单\n  Echart,    // Echart\n  Marquee,   // 无限循环列表\n  Preview,   // 图片预览\n  ElMessage, // 弹窗提示（element优化版）\n  showMore   // 下拉展示\n")])])]),n("p",[e._v("您可以在 main.js 中写入")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'vue'\nimport {\n  ComTable,\n  SvgIcon,\n  ComSearch,\n  ComDialog,\n  ComDetail,\n  ComForm,\n  Echart,\n  Ellipsis,\n  Marquee,\n  Preview,\n  ElMessage\n  showMore\n} from 'base-admin'\n\n// register globally\nVue.component('ComTable', ComTable)\nVue.component('SvgIcon', SvgIcon)\nVue.component('ComSearch', ComSearch)\nVue.component('ComDialog', ComDialog)\nVue.component('ComDetail', ComDetail)\nVue.component('ComForm', ComForm)\n")])])]),n("h2",{attrs:{id:"业务钩子-hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#业务钩子-hooks"}},[e._v("#")]),e._v(" 业务钩子（Hooks）")]),e._v(" "),n("p",[e._v("本公共依赖也根据日常业务开发，提供了部分"),n("strong",[e._v("业务钩子")]),e._v("。业务钩子对部分开发工作作简化封装。以一下三个Hooks举使用例子。")]),e._v(" "),n("h3",{attrs:{id:"配置浏览器本地存储的方式-usecache"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置浏览器本地存储的方式-usecache"}},[e._v("#")]),e._v(" 配置浏览器本地存储的方式  （useCache）")]),e._v(" "),n("p",[e._v("配置浏览器本地存储的方式，可直接存储对象数组。")]),e._v(" "),n("p",[e._v("使用方式")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import { $hooks } from 'base-admin'\nconst { wsCache } =  $hooks.useCache('sessionStorage')\nwsCache.set('XXX', 'xxxx') // 存入sessionStorage （默认）\nconst res = wsCache.get('XXX') //  'xxxx' \n\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import { $hooks } from 'base-admin'\nconst { wsCache } =  $hooks.useCache('localStorage')\nwsCache.set('XXX', 'xxxx') // 存入localStorage\nconst res = wsCache.get('XXX') //  'xxxx' \n\n")])])]),n("h3",{attrs:{id:"使用表单-useform"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用表单-useform"}},[e._v("#")]),e._v(" 使用表单 （useForm）")]),e._v(" "),n("p",[e._v("使用方式\n首先引入$hooks，在$hooks.web.useForm()的方法中会回调多个api供使用")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("    register, //向hook注册该表单组件，生成实例\n    formRef,  // 获取表单ref的实例\n    formData, // 表单所绑定的数据\n    setProps, // 设置表单项目的某个属性。 传入三个参数 分别是，表单项的field、需要设置的属性的key，值\n    addSchema, // 添加表单项目\n    delSchema, // 删除表单项目\n    setValue,  // 设置绑定数据的值。 传入两个参数 key和value \n    forceUpdateSchema //前置更新表单，使得当前表单项目与数据重新绑定\n")])])]),n("p",[e._v("在template中的com-form 中绑定register向hook注册该表单组件，生成实例")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<com-form :schema="formSchema" @register="register" @submit.native.prevent />\n')])])]),n("p",[e._v("然后你可以通过formData来获取表单实时更新的绑定值，或者使用setProps控制表单项目的属性，比如输入框的禁用或者下拉项变更等。你还可以使用\nunref(formRef).validate的方式进行表单验证。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import { $hooks } from 'base-admin'\nconst { register, formRef, formData, setProps, setValue } = $hooks.web.useForm()\n\nconst formSchema: FormSchemaConfig[] = [\n  {\n    field: 'field1',\n    label: '单选框',\n    component: 'Radio',\n    value: '1',\n    formItemProps: {\n      rules: [requiredRule]\n    },\n    options: [\n      {\n        label: '选项1',\n        value: '1'\n      },\n      {\n        label: '选项2',\n        value: '2'\n      }\n    ],\n    onChange: (item) => {\n      console.log(item)\n    }\n  }\n]\n\nfunction submit() {\n  unref(formRef).validate((valid: boolean) => {\n    if (valid) {\n      console.log(formData.value)\n    } else {\n      console.log('error submit!!')\n      return false\n    }\n  })\n}\n\nfunction reset() {\n  unref(formRef).resetFields()\n}\n")])])]),n("h3",{attrs:{id:"使用表格-usework"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用表格-usework"}},[e._v("#")]),e._v(" 使用表格 （useWork）")]),e._v(" "),n("p",[e._v("使用方式\n首先引入$hooks，在$hooks.web.useWork()的方法中会回调多个api供使用")]),e._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[e._v("  defaultParams, // 默认参数 例如 pageIndex、pageSize\n  selectionData, // 多选表格选中的row\n  currentRow,   // 单选表格选中的row\n  tableData, // 表格数据\n  loading, \n  total,\n  dialogVisible, // 是否展示弹窗 \n  dialogTitle,  // 弹窗标题\n  comName,  // 组件名称\n  dialogWidth,  // 弹窗宽度\n  rowData, // 传送的数据\n  otherParams, // 需要传给后端的其他参数\n  handleSelectionChange,   // 多选变化的时候\n  handleCurrentRowChange, // 单选变化的时候\n  toggleVisible,  // 改变弹窗dialogVisible\n  getList,// 请求数据\n  searchSubmit,  // 查询\n  resetSubmit,  // 重置\n  handleSizeChange,  // 展示多少条\n  handleCurrentChange,  // 展示第几页\n  dels,  // 删除多选\n  open,  // 打开弹窗\n  refreshTable  //重新请求数据\n")])])]),n("p",[e._v("在template中的com-search 和 com-table 中去绑定useWork() 返回的api")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('\n    <div class="search__example--wrap">\n      <com-search :schema="searchData" @search-submit="searchSubmit" @reset-submit="resetSubmit" />\n    </div>\n\n    <com-table\n      v-loading="loading"\n      :columns="columns"\n      :data="tableData"\n      :pagination="{\n        currentPage: defaultParams.pageIndex,\n        total: total,\n        onSizeChange: handleSizeChange,\n        onCurrentChange: handleCurrentChange\n      }"\n    />\n\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import { $hooks } from 'base-admin'\nconst {\n  defaultParams,\n  tableData,\n  loading,\n  total,\n  dialogVisible,\n  dialogTitle,\n  comName,\n  rowData,\n  handleSizeChange,\n  handleCurrentChange,\n  toggleVisible,\n  getList,\n  searchSubmit,\n  resetSubmit,\n  open,\n  refreshTable\n} = useWork({\n  listFun: requestApi // 请求接口的回调 返回 promise，列表接口的数据接口为 {list:array，total：number}\n})\n\nconst searchData: FormSchemaConfig[] = [\n  {\n    label: '角色名',\n    value: '',\n    component: 'Input',\n    field: 'roleName',\n    componentProps: {\n      placeholder: '请输入角色名',\n      clearable: true\n    }\n  }\n]\nconst columns = [\n  {\n    field: 'roleName',\n    label: '角色名'\n  },\n  {\n    label: '备注',\n    field: 'remark'\n  },\n  {\n    field: 'action',\n    label: '操作',\n    width: '80px'\n  }\n]\n\ngetList()\n")])])]),n("h2",{attrs:{id:"工具类和指令-utils-directive"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工具类和指令-utils-directive"}},[e._v("#")]),e._v(" 工具类和指令 （Utils & Directive）")]),e._v(" "),n("p",[e._v("本依赖库还提供了丰富的工具类和vue的自定义指令")]),e._v(" "),n("h3",{attrs:{id:"工具类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工具类"}},[e._v("#")]),e._v(" 工具类")]),e._v(" "),n("p",[e._v("提供的工具类丰富多样，就不一一说明了。这里以深拷贝（deepClone）的使用举例。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const { deepClone } = $utils\nconst obj = deepClone(item)\n")])])]),n("h3",{attrs:{id:"指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[e._v("#")]),e._v(" 指令")]),e._v(" "),n("p",[e._v("提供了部分vue自定义指令，这里以权限控制指令为例。")]),e._v(" "),n("p",[e._v("只需要在main.js中引入全局指令，其中包含了权限控制、剪贴板等。就能在项目中使用了。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import { importDirective } from 'base-admin' // 引入全局指令\nimportDirective(Vue)\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);